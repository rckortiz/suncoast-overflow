// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using suncoast_overflow;

namespace sdgreacttemplate.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190929140857_addedControllers")]
    partial class addedControllers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("suncoast_overflow.Models.Answers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnswerBody");

                    b.Property<int>("AnswerVotes");

                    b.Property<int?>("QuestionsID");

                    b.HasKey("Id");

                    b.HasIndex("QuestionsID");

                    b.ToTable("AnswersTable");
                });

            modelBuilder.Entity("suncoast_overflow.Models.Questions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Answered");

                    b.Property<string>("QuestionContent");

                    b.Property<string>("QuestionTitle");

                    b.Property<int>("QuestionVotes");

                    b.HasKey("Id");

                    b.ToTable("QuestionsTable");
                });

            modelBuilder.Entity("suncoast_overflow.Models.Answers", b =>
                {
                    b.HasOne("suncoast_overflow.Models.Questions", "Questions")
                        .WithMany()
                        .HasForeignKey("QuestionsID");
                });
#pragma warning restore 612, 618
        }
    }
}
